import pygame
import os
import random

#H+W Screen
Width = 1366
Height = 768

#Color
Pink = (255,153,204)
RED = (255,0,0)
White = (255,255,255)
Black = (0,0,0)
Darkslateblue = (72,61,139)
Indigo = (75,0,130)
Rebeccapurple = (102,51,153)
screen = pygame.display.set_mode((Width,Height))
pygame.display.set_caption('Test')
game_folder = os.path.dirname(__file__)
img_folder = os.path.join(game_folder,'img','ให้หนุน','MC','x3')
direction = 0



class Seeker(pygame.sprite.Sprite):

    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        Seeker_idle = os.path.join(img_folder,'ไฟล์_002.png')
        self.image = pygame.image.load(Seeker_idle).convert()
        self.image.set_colorkey(Black)
        self.rect = self.image.get_rect()
        self.rect.centerx = Width / 2
        self.rect.bottom = Height / 2
        self.speedx =0

    def update(self):
        Seeker_left = os.path.join(img_folder,'ไฟล์_001.png')
        Seeker_right = os.path.join(img_folder,'ไฟล์_000.png')
        Seeker_up = os.path.join(img_folder,'ไฟล์_003.png')
        Seeker_down = os.path.join(img_folder,'ไฟล์_002.png')
        self.speedx =0
        self.speedy =0
        keystate = pygame.key.get_pressed()
        if keystate[pygame.K_LEFT]:
            self.image = pygame.image.load(Seeker_left).convert()
            self.image.set_colorkey(Black)
            self.speedx = -20
            

        
        if keystate[pygame.K_RIGHT]:
            self.image = pygame.image.load(Seeker_right).convert()
            self.image.set_colorkey(Black)
            self.speedx = 20
            
        if keystate[pygame.K_DOWN]:
            self.image = pygame.image.load(Seeker_down).convert()
            self.image.set_colorkey(Black)
            self.speedy = 20
            
        if keystate[pygame.K_UP]:
            self.image = pygame.image.load(Seeker_up).convert()
            self.image.set_colorkey(Black)
            self.speedy = -20
            
        self.rect.x += self.speedx
        self.rect.y += self.speedy
        
        if self.rect.right > Width + 10:
            self.rect.right = Width + 10
        
        if self.rect.left < -10:
            self.rect.left = -10
        
        if self.rect.top < 4:
            self.rect.top = 4
        
        if self.rect.bottom > Height:
            self.rect.bottom = Height



    def attack(self):
        
        attack =Attack_effect(self.rect.centerx,self.rect.top)
        all_sprites.add(attack)
        attack_effects.add(attack)

class HP1(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface((40,40))
        self.image.fill(Pink)
        self.rect =self.image.get_rect()
        self.rect.left = 180
        self.rect.bottom = 70

class HP2(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface((40,40))
        self.image.fill(Pink)
        self.rect =self.image.get_rect()
        self.rect.left = 120
        self.rect.bottom = 70

class HP3(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface((40,40))
        self.image.fill(Pink)
        self.rect =self.image.get_rect()
        self.rect.left = 60
        self.rect.bottom = 70


class Enemy(pygame.sprite.Sprite):

    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface((50,90))
        self.image.fill(RED)
        self.rect =self.image.get_rect()
        self.rect.centerx = Width / 4
        self.rect.bottom = Height / 2

class Attack_effect(pygame.sprite.Sprite):
    def __init__(self,x,y):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface((90,20))
        self.image.fill(White)
        self.rect = self.image.get_rect()
        self.rect.centerx = x
        self.rect.bottom = y
        self.speedy = -5
        print(self.rect.centerx)
        print(self.rect.bottom)
    
    def update(self):
        #self.rect.y += self.speedy
        if self.rect.bottom < 0:
            self.kill
    
seeker = Seeker()
#attack_effect =Attack_effect()
all_sprites = pygame.sprite.Group()
all_sprites.add(seeker)
enemy = pygame.sprite.Group()
hps = pygame.sprite.Group
attack_effects = pygame.sprite.Group()
    
hp1 = HP1()
all_sprites.add(hp1)
hps.add(hp1)
hp2 = HP2()
all_sprites.add(hp2)
hps.add(hp2)
hp3 = HP3()
all_sprites.add(hp3)
hps.add(hp3)


em = Enemy()
all_sprites.add(em)
enemy.add(em)

Game_running = True
while Game_running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            Game_running = False
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_SPACE:
                seeker.attack()


        
        
        all_sprites.update()
        hits_thing = pygame.sprite.groupcollide(enemy,attack_effects,True,True)

       
                                
            
        
        hits = pygame.sprite.spritecollide(seeker,enemy,False)
        #check HP if HP run out,seeker will die
        hit_sec = 0
        screen.fill(Black)
        all_sprites.draw(screen)
        pygame.display.flip()
        
        

        


pygame.quit()